#!/usr/bin/python
# -*- coding: utf-8 -*-

import copy
import skin
from enigma import eListboxPythonMultiContent, gFont, getPrevAsciiCode, RT_HALIGN_CENTER, RT_VALIGN_CENTER, getDesktop
from Components.ActionMap import HelpableNumberActionMap, NumberActionMap
from Components.Input import Input
from Components.Label import Label
from Components.Language import language
from Components.MenuList import MenuList
from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixmapAlphaBlend, MultiContentEntryPixmapAlphaTest
from Components.Sources.StaticText import StaticText
from Screens.ChoiceBox import ChoiceBox
from Screens.Screen import Screen
from Tools.LoadPixmap import LoadPixmap
from Components.Pixmap import Pixmap
from Tools.NumericalTextInput import NumericalTextInput
from Tools.Directories import resolveFilename, SCOPE_PLUGINS
from Components.config import config
from skin import loadSkin
loadSkin(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/vkskin.xml'))


class VirtualKeyBoardList(MenuList):

    def __init__(self, list, enableWrapAround=False):
        MenuList.__init__(self, list, enableWrapAround, eListboxPythonMultiContent)
        font = skin.fonts.get('VirtualKeyBoard', ('Regular', 28, 45))
        self.l.setFont(0, gFont(font[0], font[1]))
        self.l.setFont(1, gFont(font[0], font[1] * 5 / 9))
        self.l.setItemHeight(font[2])


class VirtualKeyBoard(Screen):

    def __init__(self, session, title='', text='', maxSize=False, visible_width=False, type='', currPos=0, allMarked=False):
        Screen.__init__(self, session)
        self.title = title
        self.text = text
        self.type = type
        self.maxSize = maxSize
        self.visible_width = visible_width
        self.currPos = currPos
        self.allMarked = allMarked
        self.initclass_new()

    def initclass_old(self):
        dwidth = getDesktop(0).size().width()
        if dwidth == 1280:
            self.skinName = 'vkeyboardold_hdskin'
        else:
            self.skinName = 'vkeyboardold_fhdskin'
        self.setTitle(_('Virtual keyboard'))
        self.keys_list = []
        self.shiftkeys_list = []
        self.thirdkeys_list = []
        self.lang = language.getLanguage()
        self.nextLang = None
        self.shiftMode = 0
        self.selectedKey = 0
        self.smsChar = None
        self.sms = NumericalTextInput(self.smsOK)
        if dwidth == 1280:
            self.key_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_bg.png'))
            self.key_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_sel.png'))
            self.key_backspace = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_backspace.png'))
            self.key_all = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_all.png'))
            self.key_clr = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_clr.png'))
            self.key_esc = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_esc.png'))
            self.key_ok = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_ok.png'))
            self.key_shift = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift.png'))
            self.key_shift_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift_sel.png'))
            self.key_space = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_space.png'))
            self.key_left = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_left.png'))
            self.key_right = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_right.png'))
        else:
            self.key_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_bg.png'))
            self.key_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_sel.png'))
            self.key_backspace = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_backspace.png'))
            self.key_all = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_all.png'))
            self.key_clr = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_clr.png'))
            self.key_esc = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_esc.png'))
            self.key_ok = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_ok.png'))
            self.key_shift = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift.png'))
            self.key_shift_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift_sel.png'))
            self.key_space = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_space.png'))
            self.key_left = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_left.png'))
            self.key_right = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_right.png'))
        self.keyImages = {'BACKSPACE': self.key_backspace,
         'ALL': self.key_all,
         'EXIT': self.key_esc,
         'OK': self.key_ok,
         'SHIFT': self.key_shift,
         'SPACE': self.key_space,
         'LEFT': self.key_left,
         'RIGHT': self.key_right}
        self.keyImagesShift = {'BACKSPACE': self.key_backspace,
         'CLEAR': self.key_clr,
         'EXIT': self.key_esc,
         'OK': self.key_ok,
         'SHIFT': self.key_shift_sel,
         'SPACE': self.key_space,
         'LEFT': self.key_left,
         'RIGHT': self.key_right}
        self.keyImagesThird = {'BACKSPACE': self.key_backspace,
         'ALL': self.key_all,
         'CLEAR': self.key_clr,
         'EXIT': self.key_esc,
         'OK': self.key_ok,
         'SHIFT': self.key_shift_sel,
         'SPACE': self.key_space,
         'LEFT': self.key_left,
         'RIGHT': self.key_right}
        self['key_red'] = StaticText(_('Exit'))
        self['key_green'] = StaticText(_('OK'))
        self['key_yellow'] = StaticText('')
        self['key_blue'] = StaticText(_('Upper / Lower'))
        self['country'] = StaticText('')
        self['header'] = Label(self.title)
        self['text'] = Input(text=self.text, maxSize=self.maxSize, visible_width=self.visible_width, type=self.type, currPos=len(self.text), allMarked=self.allMarked)
        self['list'] = VirtualKeyBoardList([])
        self['actions'] = NumberActionMap(['OkCancelActions',
         'WizardActions',
         'ColorActions',
         'KeyboardInputActions',
         'InputBoxActions',
         'InputAsciiActions'], {'gotAsciiCode': self.keyGotAscii_old,
         'ok': self.okClicked_old,
         'cancel': self.exit,
         'left': self.left_old,
         'right': self.right_old,
         'up': self.up_old,
         'down': self.down_old,
         'red': self.exit,
         'green': self.ok,
         'yellow': self.switchLang,
         'blue': self.shiftClicked_old,
         'deleteBackward': self.backClicked,
         'deleteForward': self.forwardClicked,
         'back': self.exit,
         'pageUp': self.cursorRight,
         'pageDown': self.cursorLeft,
         '1': self.keyNumberGlobal_old,
         '2': self.keyNumberGlobal_old,
         '3': self.keyNumberGlobal_old,
         '4': self.keyNumberGlobal_old,
         '5': self.keyNumberGlobal_old,
         '6': self.keyNumberGlobal_old,
         '7': self.keyNumberGlobal_old,
         '8': self.keyNumberGlobal_old,
         '9': self.keyNumberGlobal_old,
         '0': self.keyNumberGlobal_old}, -2)
        self.setLang()
        self.onExecBegin.append(self.setKeyboardModeAscii)
        self.onLayoutFinish.append(self.buildVirtualKeyBoard_old)
        self.onClose.append(self.__onClose)

    def __onClose(self):
        self.sms.timer.stop()

    def switchLang(self):
        self.lang = self.nextLang
        self.setLang()
        self.buildVirtualKeyBoard_old()

    def setLang(self):
        self.thirdkeys_list = []
        if self.lang == 'ar_AE':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['\u0636',
              '\u0635',
              '\u062b',
              '\u0642',
              '\u0641',
              '\u063a',
              '\u0639',
              '\u0647',
              '\u062e',
              '\u062d',
              '\u062c',
              '\u062f'],
             ['\u0634',
              '\u0633',
              '\u064a',
              '\u0628',
              '\u0644',
              '\u0627',
              '\u062a',
              '\u0646',
              '\u0645',
              '\u0643',
              '\u0637',
              '#'],
             ['\u0626',
              '\u0621',
              '\u0624',
              '\u0631',
              '\u0644\u0627',
              '\u0649',
              '\u0629',
              '\u0648',
              '\u0632',
              '\xd8\xb8',
              '\u0630',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '+',
              '-',
              '*',
              '/',
              '.',
              ',',
              '@',
              '%',
              '&',
              'OK']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '^',
              '<',
              '>',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['\u064e',
              '\u064b',
              '\u064f',
              '\u064c',
              '\u0644\u0625',
              '\u0625',
              '\u2018',
              '\xf7',
              '\xd7',
              '\u061b',
              '<',
              '>'],
             ['\u0650',
              '\u064d',
              ']',
              '[',
              '\u0644\u0623',
              '\u0623',
              '\u0640',
              '\u060c',
              '/',
              ':',
              '~',
              "'"],
             ['\u0652',
              '}',
              '{',
              '\u0644\u0622',
              '\u0622',
              '\u2019',
              ',',
              '.',
              '\u061f',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '=',
              '\u0651',
              '~',
              'OK']]
            self.nextLang = 'cs_CZ'
        elif self.lang == 'cs_CZ':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xfa',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\u016f',
              '\xa7',
              '/'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\u011b',
              '\u0161',
              '\u010d',
              '\u0159',
              '\u017e',
              '\xfd',
              '\xe1',
              '\xed',
              '\xe9',
              'OK']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '#',
              '$',
              '%',
              '^',
              '&',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\xda',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\u016e',
              '\\',
              "'"],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '\u011a',
              '\u0160',
              '\u010c',
              '\u0158',
              '\u017d',
              '\xdd',
              '\xc1',
              '\xcd',
              '\xc9',
              'OK']]
            self.thirdkeys_list = [['EXIT',
              'SPACE',
              'SPACE',
              'SPACE',
              '\u0164',
              'SPACE',
              'SPACE',
              'SPACE',
              '\xd3',
              'SPACE',
              'SPACE',
              'BACKSPACE'],
             ['\\',
              '|',
              '\u010e',
              'SPACE',
              '\u0165',
              'SPACE',
              '\u0147',
              'SPACE',
              '\xf3',
              'SPACE',
              '/',
              'ALL'],
             ['SPACE',
              'SPACE',
              '\u010f',
              '[',
              ']',
              'SPACE',
              '\u0148',
              'SPACE',
              'SPACE',
              'SPACE',
              '"',
              'CLEAR'],
             ['SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              '{',
              '}',
              'SPACE',
              'SPACE',
              '?',
              'SPACE',
              'BACKSPACE'],
             ['SHIFT',
              'SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              'SPACE',
              '<',
              '>',
              'SPACE',
              'OK']]
            self.nextLang = 'de_DE'
        elif self.lang == 'de_DE':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xfc',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\xf6',
              '\xe4',
              '#'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\xdf',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\xdc',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\xd6',
              '\xc4',
              "'"],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'el_GR'
        elif self.lang == 'el_GR':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['=',
              '\u03c2',
              '\u03b5',
              '\u03c1',
              '\u03c4',
              '\u03c5',
              '\u03b8',
              '\u03b9',
              '\u03bf',
              '\u03c0',
              '[',
              ']'],
             ['\u03b1',
              '\u03c3',
              '\u03b4',
              '\u03c6',
              '\u03b3',
              '\u03b7',
              '\u03be',
              '\u03ba',
              '\u03bb',
              ';',
              "'",
              '-'],
             ['\\',
              '\u03b6',
              '\u03c7',
              '\u03c8',
              '\u03c9',
              '\u03b2',
              '\u03bd',
              '\u03bc',
              ',',
              '.',
              '/',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\u03ac',
              '\u03ad',
              '\u03ae',
              '\u03af',
              '\u03cc',
              '\u03cd',
              '\u03ce',
              '\u03ca',
              '\u03cb',
              'OK']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '#',
              '$',
              '%',
              '^',
              '&',
              '*',
              '(',
              ')',
              'BACKSPACE'],
             ['+',
              '\u20ac',
              '\u0395',
              '\u03a1',
              '\u03a4',
              '\u03a5',
              '\u0398',
              '\u0399',
              '\u039f',
              '\u03a0',
              '{',
              '}'],
             ['\u0391',
              '\u03a3',
              '\u0394',
              '\u03a6',
              '\u0393',
              '\u0397',
              '\u039e',
              '\u039a',
              '\u039b',
              ':',
              '"',
              '_'],
             ['|',
              '\u0396',
              '\u03a7',
              '\u03a8',
              '\u03a9',
              '\u0392',
              '\u039d',
              '\u039c',
              '<',
              '>',
              '?',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '\u0386',
              '\u0388',
              '\u0389',
              '\u038a',
              '\u038c',
              '\u038e',
              '\u038f',
              '\u03aa',
              '\u03ab',
              'OK']]
            self.nextLang = 'es_ES'
        elif self.lang == 'es_ES':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xfa',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\xf3',
              '\xe1',
              '#'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\u0141',
              '\u0155',
              '\xe9',
              '\u010d',
              '\xed',
              '\u011b',
              '\u0144',
              '\u0148',
              'OK']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\xda',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\xd3',
              '\xc1',
              "'"],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\u0154',
              '\xc9',
              '\u010c',
              '\xcd',
              '\u011a',
              '\u0143',
              '\u0147',
              'OK']]
            self.nextLang = 'fa_IR'
        elif self.lang == 'fa_IR':
            self.keys_list = [['EXIT',
              '\u06f1',
              '\u06f2',
              '\u06f3',
              '\u06f4',
              '\u06f5',
              '\u06f6',
              '\u06f7',
              '\u06f8',
              '\u06f9',
              '\u06f0',
              'BACKSPACE'],
             ['\u0636',
              '\u0635',
              '\u062b',
              '\u0642',
              '\u0641',
              '\u063a',
              '\u0639',
              '\u0647',
              '\u062e',
              '\u062d',
              '-',
              '\u062c'],
             ['\u0634',
              '\u0633',
              '\u06cc',
              '\u0628',
              '\u0644',
              '\u0627',
              '\u062a',
              '\u0646',
              '\u0645',
              '\u06a9',
              '\u06af',
              '\u067e'],
             ['<',
              '\u0638',
              '\u0637',
              '\u0632',
              '\u0631',
              '\u0630',
              '\u062f',
              '\u0626',
              '\u0648',
              '.',
              '/',
              'ALL'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT',
              '*']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '#',
              '$',
              '%',
              '^',
              '&',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['\u0636',
              '\u0635',
              '\u062b',
              '\u0642',
              '\u060c',
              '\u061b',
              '\u0639',
              '\u0647',
              '\u062e',
              '\u062d',
              '+',
              '\u0686'],
             ['\u0634',
              '\u0633',
              '\u06cc',
              '\u0628',
              '\u06c0',
              '\u0622',
              '\u062a',
              '\u0646',
              '\u0645',
              '?',
              '"',
              '|'],
             ['>',
              '\u0629',
              '\u064a',
              '\u0698',
              '\u0624',
              '\u0625',
              '\u0623',
              '\u0621',
              ';',
              ':',
              '\u061f',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT',
              '~']]
            self.nextLang = 'fi_FI'
        elif self.lang == 'fi_FI':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xe9',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\xf6',
              '\xe4',
              '#'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\xdf',
              '\u013a',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\xc9',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\xd6',
              '\xc4',
              "'"],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\u0139',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'fr_FR'
        elif self.lang == 'fr_FR':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['a',
              'z',
              'e',
              'r',
              't',
              'y',
              'u',
              'i',
              'o',
              'p',
              '\xe9',
              '\xe8'],
             ['q',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              'm',
              '\xea',
              '\xeb'],
             ['<',
              'w',
              'x',
              'c',
              'v',
              'b',
              'n',
              ',',
              ';',
              ':',
              '=',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\xf9',
              '\xe2',
              '\xef',
              '\xf4',
              '\xe7',
              '#',
              '-',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '&',
              '@',
              '"',
              '\u20ac',
              '\xa7',
              '!',
              '\xe7',
              '(',
              ')',
              '_',
              'BACKSPACE'],
             ['A',
              'Z',
              'E',
              'R',
              'T',
              'Y',
              'U',
              'I',
              'O',
              'P',
              '\xc9',
              '\xc8'],
             ['Q',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              'M',
              '\xca',
              '\xcb'],
             ['>',
              'W',
              'X',
              'C',
              'V',
              'B',
              'N',
              '?',
              '.',
              '+',
              '~',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '\xd9',
              '\xc2',
              '\xcf',
              '\xd4',
              '\xb0',
              '/',
              '\\',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'lv_LV'
        elif self.lang == 'lv_LV':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'y',
              'u',
              'i',
              'o',
              'p',
              '-',
              '\u0161'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              ';',
              "'",
              '\u016b'],
             ['<',
              'z',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '\u017e',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\u0101',
              '\u010d',
              '\u0113',
              '\u0123',
              '\u012b',
              '\u0137',
              '\u013c',
              '\u0146',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '$',
              '*',
              '(',
              ')',
              '_',
              '=',
              '/',
              '\\',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Y',
              'U',
              'I',
              'O',
              'P',
              '+',
              '\u0160'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              ':',
              '"',
              '\u016a'],
             ['>',
              'Z',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              '#',
              '?',
              '\u017d',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '\u0100',
              '\u010c',
              '\u0112',
              '\u0122',
              '\u012a',
              '\u0136',
              '\u013b',
              '\u0145',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'pl_PL'
        elif self.lang == 'pl_PL':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'y',
              'u',
              'i',
              'o',
              'p',
              '-',
              '['],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              ';',
              "'",
              '\\'],
             ['<',
              'z',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '/',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\u0105',
              '\u0107',
              '\u0119',
              '\u0142',
              '\u0144',
              '\xf3',
              '\u015b',
              '\u017a',
              '\u017c',
              'OK']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '#',
              '$',
              '%',
              '^',
              '&',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Y',
              'U',
              'I',
              'O',
              'P',
              '*',
              ']'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '?',
              '"',
              '|'],
             ['>',
              'Z',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '\u0104',
              '\u0106',
              '\u0118',
              '\u0141',
              '\u0143',
              '\xd3',
              '\u015a',
              '\u0179',
              '\u017b',
              'OK']]
            self.nextLang = 'ru_RU'
        elif self.lang == 'ru_RU':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['\u0430',
              '\u0431',
              '\u0432',
              '\u0433',
              '\u0434',
              '\u0435',
              '\u0451',
              '\u0436',
              '\u0437',
              '\u0438',
              '\u0439',
              '+'],
             ['\u043a',
              '\u043b',
              '\u043c',
              '\u043d',
              '\u043e',
              '\u043f',
              '\u0440',
              '\u0441',
              '\u0442',
              '\u0443',
              '\u0444',
              '#'],
             ['<',
              '\u0445',
              '\u0446',
              '\u0447',
              '\u0448',
              '\u0449',
              '\u044a',
              '\u044b',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\u044c',
              '\u044d',
              '\u044e',
              '\u044f',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['\u0410',
              '\u0411',
              '\u0412',
              '\u0413',
              '\u0414',
              '\u0415',
              '\u0401',
              '\u0416',
              '\u0417',
              '\u0418',
              '\u0419',
              '*'],
             ['\u041a',
              '\u041b',
              '\u041c',
              '\u041d',
              '\u041e',
              '\u041f',
              '\u0420',
              '\u0421',
              '\u0422',
              '\u0423',
              '\u0424',
              "'"],
             ['>',
              '\u0425',
              '\u0426',
              '\u0427',
              '\u0428',
              '\u0429',
              '\u042a',
              '\u042b',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\u042c',
              '\u042d',
              '\u042e',
              '\u042f',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'sk_SK'
        elif self.lang == 'sk_SK':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xfa',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\u013e',
              '@',
              '#'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '\u0161',
              '\u010d',
              '\u017e',
              '\xfd',
              '\xe1',
              '\xed',
              '\xe9',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\u0165',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\u0148',
              '\u010f',
              "'"],
             ['\xc1',
              '\xc9',
              '\u010e',
              '\xcd',
              '\xdd',
              '\xd3',
              '\xda',
              '\u017d',
              '\u0160',
              '\u010c',
              '\u0164',
              '\u0147'],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\xe4',
              '\xf6',
              '\xfc',
              '\xf4',
              '\u0155',
              '\u013a',
              'OK']]
            self.nextLang = 'sv_SE'
        elif self.lang == 'sv_SE':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'z',
              'u',
              'i',
              'o',
              'p',
              '\xe9',
              '+'],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              '\xf6',
              '\xe4',
              '#'],
             ['<',
              'y',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\xdf',
              '\u013a',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Z',
              'U',
              'I',
              'O',
              'P',
              '\xc9',
              '*'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '\xd6',
              '\xc4',
              "'"],
             ['>',
              'Y',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\u0139',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'th_TH'
        elif self.lang == 'th_TH':
            self.keys_list = [['EXIT',
              '\xe0\xb9\x85',
              '\xe0\xb8\xa0',
              '\xe0\xb8\x96',
              '\xe0\xb8\xb8',
              '\xe0\xb8\xb6',
              '\xe0\xb8\x84',
              '\xe0\xb8\x95',
              '\xe0\xb8\x88',
              '\xe0\xb8\x82',
              '\xe0\xb8\x8a',
              'BACKSPACE'],
             ['\xe0\xb9\x86',
              '\xe0\xb9\x84',
              '\xe0\xb8\xb3',
              '\xe0\xb8\x9e',
              '\xe0\xb8\xb0',
              '\xe0\xb8\xb1',
              '\xe0\xb8\xb5',
              '\xe0\xb8\xa3',
              '\xe0\xb8\x99',
              '\xe0\xb8\xa2',
              '\xe0\xb8\x9a',
              '\xe0\xb8\xa5'],
             ['\xe0\xb8\x9f',
              '\xe0\xb8\xab',
              '\xe0\xb8\x81',
              '\xe0\xb8\x94',
              '\xe0\xb9\x80',
              '\xe0\xb9\x89',
              '\xe0\xb9\x88',
              '\xe0\xb8\xb2',
              '\xe0\xb8\xaa',
              '\xe0\xb8\xa7',
              '\xe0\xb8\x87',
              '\xe0\xb8\x83'],
             ['\xe0\xb8\x9c',
              '\xe0\xb8\x9b',
              '\xe0\xb9\x81',
              '\xe0\xb8\xad',
              '\xe0\xb8\xb4',
              '\xe0\xb8\xb7',
              '\xe0\xb8\x97',
              '\xe0\xb8\xa1',
              '\xe0\xb9\x83',
              '\xe0\xb8\x9d',
              '',
              'ALL'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '\xe0\xb9\x91',
              '\xe0\xb9\x92',
              '\xe0\xb9\x93',
              '\xe0\xb9\x94',
              '\xe0\xb8\xb9',
              '\xe0\xb9\x95',
              '\xe0\xb9\x96',
              '\xe0\xb9\x97',
              '\xe0\xb9\x98',
              '\xe0\xb9\x99',
              'BACKSPACE'],
             ['\xe0\xb9\x90',
              '',
              '\xe0\xb8\x8e',
              '\xe0\xb8\x91',
              '\xe0\xb8\x98',
              '\xe0\xb9\x8d',
              '\xe0\xb9\x8a',
              '\xe0\xb8\x93',
              '\xe0\xb8\xaf',
              '\xe0\xb8\x8d',
              '\xe0\xb8\x90',
              '\xe0\xb8\x85'],
             ['\xe0\xb8\xa4',
              '\xe0\xb8\x86',
              '\xe0\xb8\x8f',
              '\xe0\xb9\x82',
              '\xe0\xb8\x8c',
              '\xe0\xb9\x87',
              '\xe0\xb9\x8b',
              '\xe0\xb8\xa9',
              '\xe0\xb8\xa8',
              '\xe0\xb8\x8b',
              '',
              '\xe0\xb8\xbf'],
             ['',
              '',
              '\xe0\xb8\x89',
              '\xe0\xb8\xae',
              '\xe0\xb8\xba',
              '\xe0\xb9\x8c',
              '',
              '\xe0\xb8\x92',
              '\xe0\xb8\xac',
              '\xe0\xb8\xa6',
              '',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'uk_UA'
        elif self.lang == 'uk_UA':
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['\u0430',
              '\u0431',
              '\u0432',
              '\u0433',
              '\u0491',
              '\u0434',
              '\u0435',
              '\u0454',
              '\u0436',
              '\u0437',
              '\u0438',
              '+'],
             ['\u0456',
              '\u0457',
              '\u0439',
              '\u043a',
              '\u043b',
              '\u043c',
              '\u043d',
              '\u043e',
              '\u043f',
              '\u0440',
              '\u0441',
              '#'],
             ['<',
              '\u0442',
              '\u0443',
              '\u0444',
              '\u0445',
              '\u0446',
              '\u0447',
              '\u0448',
              ',',
              '.',
              '-',
              'ALL'],
             ['SHIFT',
              'SPACE',
              '@',
              '\u0449',
              '\u044c',
              '\u044e',
              '\u044f',
              'OK',
              'LEFT',
              'RIGHT']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '"',
              '\xa7',
              '$',
              '%',
              '&',
              '/',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['\u0410',
              '\u0411',
              '\u0412',
              '\u0413',
              '\u0490',
              '\u0414',
              '\u0415',
              '\u0404',
              '\u0416',
              '\u0417',
              '\u0418',
              '*'],
             ['\u0406',
              '\u0407',
              '\u0419',
              '\u041a',
              '\u041b',
              '\u041c',
              '\u041d',
              '\u041e',
              '\u041f',
              '\u0420',
              '\u0421',
              "'"],
             ['>',
              '\u0422',
              '\u0423',
              '\u0424',
              '\u0425',
              '\u0426',
              '\u0427',
              '\u0428',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              '?',
              '\\',
              '\u0429',
              '\u042c',
              '\u042e',
              '\u042f',
              'OK',
              'LEFT',
              'RIGHT']]
            self.nextLang = 'en_EN'
        else:
            self.keys_list = [['EXIT',
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '0',
              'BACKSPACE'],
             ['q',
              'w',
              'e',
              'r',
              't',
              'y',
              'u',
              'i',
              'o',
              'p',
              '-',
              '['],
             ['a',
              's',
              'd',
              'f',
              'g',
              'h',
              'j',
              'k',
              'l',
              ';',
              "'",
              '\\'],
             ['<',
              'z',
              'x',
              'c',
              'v',
              'b',
              'n',
              'm',
              ',',
              '.',
              '/',
              'ALL'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT',
              '*']]
            self.shiftkeys_list = [['EXIT',
              '!',
              '@',
              '#',
              '$',
              '%',
              '^',
              '&',
              '(',
              ')',
              '=',
              'BACKSPACE'],
             ['Q',
              'W',
              'E',
              'R',
              'T',
              'Y',
              'U',
              'I',
              'O',
              'P',
              '+',
              ']'],
             ['A',
              'S',
              'D',
              'F',
              'G',
              'H',
              'J',
              'K',
              'L',
              '?',
              '"',
              '|'],
             ['>',
              'Z',
              'X',
              'C',
              'V',
              'B',
              'N',
              'M',
              ';',
              ':',
              '_',
              'CLEAR'],
             ['SHIFT',
              'SPACE',
              'OK',
              'LEFT',
              'RIGHT',
              '~']]
            self.lang = 'en_EN'
            self.nextLang = 'ar_AE'
        self['country'].setText(self.lang)
        self['key_yellow'].setText(self.lang)
        self.max_key = 47 + len(self.keys_list[4])

    def virtualKeyBoardEntryComponent_old(self, keys):
        w, h = skin.parameters.get('VirtualKeyboard', (45, 45))
        key_bg_width = self.key_bg and self.key_bg.size().width() or w
        key_images = self.shiftMode & 2 and self.keyImagesThird or self.shiftMode & 1 and self.keyImagesShift or self.keyImages
        res = [keys]
        text = []
        x = 0
        for key in keys:
            png = key_images.get(key, None)
            if png:
                width = png.size().width()
                res.append(MultiContentEntryPixmapAlphaTest(pos=(x, 0), size=(width, h), png=png))
            else:
                width = key_bg_width
                res.append(MultiContentEntryPixmapAlphaTest(pos=(x, 0), size=(width, h), png=self.key_bg))
                text.append(MultiContentEntryText(pos=(x, 0), size=(width, h), font=0, text=key.encode('utf-8'), flags=RT_HALIGN_CENTER | RT_VALIGN_CENTER))
            x += width

        return res + text

    def buildVirtualKeyBoard_old(self):
        self.previousSelectedKey = None
        self.list = []
        self.max_key = 0
        if self.shiftMode == 2 and not len(self.thirdkeys_list):
            self.shiftMode -= 1
        for keys in self.shiftMode & 2 and self.thirdkeys_list or self.shiftMode & 1 and self.shiftkeys_list or self.keys_list:
            self.list.append(self.virtualKeyBoardEntryComponent_old(keys))
            self.max_key += len(keys)

        self.max_key -= 1
        self.markSelectedKey_old()

    def markSelectedKey_old(self):
        w, h = skin.parameters.get('VirtualKeyboard', (45, 45))
        if self.previousSelectedKey is not None:
            self.list[self.previousSelectedKey / 12] = self.list[self.previousSelectedKey / 12][:-1]
        try:
            width = self.key_sel.size().width()
        except:
            width = w

        try:
            x = self.list[self.selectedKey / 12][self.selectedKey % 12 + 1][1]
        except IndexError:
            self.selectedKey = self.max_key
            x = self.list[self.selectedKey / 12][self.selectedKey % 12 + 1][1]

        self.list[self.selectedKey / 12].append(MultiContentEntryPixmapAlphaTest(pos=(x, 0), size=(width, h), png=self.key_sel))
        self.previousSelectedKey = self.selectedKey
        self['list'].setList(self.list)

    def shiftClicked_old(self):
        self.smsChar = None
        if len(self.thirdkeys_list):
            self.shiftMode += 1
            self.shiftMode %= 3
        else:
            self.shiftMode = not self.shiftMode
        self.buildVirtualKeyBoard_old()

    def okClicked_old(self):
        self.smsChar = None
        text = (self.shiftMode & 1 and self.shiftkeys_list or self.shiftMode & 2 and self.thirdkeys_list or self.keys_list)[self.selectedKey / 12][self.selectedKey % 12].encode('UTF-8')
        if text == 'EXIT':
            self.close(None)
        elif text == 'BACKSPACE':
            self['text'].deleteBackward()
        elif text == 'ALL':
            self['text'].markAll()
        elif text == 'CLEAR':
            self['text'].deleteAllChars()
            self['text'].update()
        elif text == 'SHIFT':
            self.shiftClicked()
        elif text == 'SPACE':
            self['text'].char(' '.encode('UTF-8'))
        elif text == 'OK':
            self.close(self['text'].getText())
        elif text == 'LEFT':
            self['text'].left()
        elif text == 'RIGHT':
            self['text'].right()
        else:
            self['text'].char(text)

    def ok(self):
        self.close(self['text'].getText())

    def exit(self):
        self.close(None)

    def cursorRight(self):
        self['text'].right()

    def cursorLeft(self):
        self['text'].left()

    def left_old(self):
        self.smsChar = None
        self.selectedKey = self.selectedKey / 12 * 12 + (self.selectedKey + 11) % 12
        if self.selectedKey > self.max_key:
            self.selectedKey = self.max_key
        self.markSelectedKey_old()

    def right_old(self):
        self.smsChar = None
        self.selectedKey = self.selectedKey / 12 * 12 + (self.selectedKey + 1) % 12
        if self.selectedKey > self.max_key:
            self.selectedKey = self.selectedKey / 12 * 12
        self.markSelectedKey_old()

    def up_old(self):
        self.smsChar = None
        self.selectedKey -= 12
        if self.selectedKey < 0:
            self.selectedKey = self.max_key / 12 * 12 + self.selectedKey % 12
            if self.selectedKey > self.max_key:
                self.selectedKey -= 12
        self.markSelectedKey_old()

    def down_old(self):
        self.smsChar = None
        self.selectedKey += 12
        if self.selectedKey > self.max_key:
            self.selectedKey %= 12
        self.markSelectedKey_old()

    def keyNumberGlobal_old(self, number):
        self.smsChar = self.sms.getKey(number)
        self.selectAsciiKey_old(self.smsChar)

    def smsOK(self):
        if self.smsChar and self.selectAsciiKey_old(self.smsChar):
            print('pressing ok now')
            self.okClicked()

    def keyGotAscii_old(self):
        self.smsChar = None
        if self.selectAsciiKey_old(str(chr(getPrevAsciiCode()).encode('utf-8'))):
            self.okClicked()

    def selectAsciiKey_old(self, char):
        if char == ' ':
            char = 'SPACE'
        for keyslist in (self.shiftkeys_list, self.keys_list, self.thirdkeys_list):
            selkey = 0
            for keys in keyslist:
                for key in keys:
                    if key == char:
                        self.selectedKey = selkey
                        if keyslist is self.keys_list:
                            if self.shiftMode != 0:
                                self.shiftMode = 0
                                self.buildVirtualKeyBoard_old()
                            else:
                                self.markSelectedKey_old()
                        elif keyslist is self.shiftkeys_list:
                            if self.shiftMode != 1:
                                self.shiftMode = 1
                                self.buildVirtualKeyBoard_old()
                            else:
                                self.markSelectedKey()
                        elif keyslist is self.thirdkeys_list:
                            if self.shiftMode != 2:
                                self.shiftMode = 2
                                self.buildVirtualKeyBoard_old()
                            else:
                                self.markSelectedKey_old()
                        return True
                    selkey += 1

        return False

    def initclass_new(self):
        dwidth = getDesktop(0).size().width()
        if dwidth == 1280:
            self.skinName = 'vkeyboardnew_hdskin'
        else:
            self.skinName = 'vkeyboardnew_fhdskin'
        prompt = self.title
        print('VirtualKeyboard New')
        if dwidth == 1280:
            self.key_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_bg.png'))
            self.key_red_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_red.png'))
            self.key_green_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_green.png'))
            self.key_yellow_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_yellow.png'))
            self.key_blue_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_blue.png'))
            self.key_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_sel.png'))
            self.key_backspace = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_backspace.png'))
            self.key_enter = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_enter.png'))
            self.key_first = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_first.png'))
            self.key_last = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_last.png'))
            self.key_left = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_left.png'))
            self.key_right = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_right.png'))
            self.key_shift0 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift0.png'))
            self.key_shift1 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift1.png'))
            self.key_shift2 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift2.png'))
            self.key_shift3 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_shift3.png'))
            self.key_space = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_space.png'))
            self.key_space_alt = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsHD/vkey_space_alt.png'))
        else:
            self.key_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_bg.png'))
            self.key_red_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_red.png'))
            self.key_green_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'xtensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_green.png'))
            self.key_yellow_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_yellow.png'))
            self.key_blue_bg = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_blue.png'))
            self.key_sel = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_sel.png'))
            self.key_backspace = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_backspace.png'))
            self.key_enter = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_enter.png'))
            self.key_first = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_first.png'))
            self.key_last = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_last.png'))
            self.key_left = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_left.png'))
            self.key_right = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_right.png'))
            self.key_shift0 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift0.png'))
            self.key_shift1 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift1.png'))
            self.key_shift2 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift2.png'))
            self.key_shift3 = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_shift3.png'))
            self.key_space = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_space.png'))
            self.key_space_alt = LoadPixmap(resolveFilename(SCOPE_PLUGINS, 'Extensions/KeyAdder/VirtualKeyBoard_Icons/buttonsFHD/vkey_space_alt.png'))
        self.keyBackgrounds = {'EXIT': self.key_red_bg,
         'OK': self.key_green_bg,
         'SAVE': self.key_green_bg,
         'LOC': self.key_yellow_bg,
         'SHFT': self.key_blue_bg}
        self.keyImages = [{'BACKSPACE': self.key_backspace,
          'ENTER': self.key_enter,
          'FIRST': self.key_first,
          'LAST': self.key_last,
          'LEFT': self.key_left,
          'RIGHT': self.key_right,
          'SHIFT': self.key_shift0,
          'SPACE': self.key_space_alt},
         {'BACKSPACE': self.key_backspace,
          'ENTER': self.key_enter,
          'FIRST': self.key_first,
          'LAST': self.key_last,
          'LEFT': self.key_left,
          'RIGHT': self.key_right,
          'SHIFT': self.key_shift1,
          'SPACE': self.key_space_alt},
         {'BACKSPACE': self.key_backspace,
          'ENTER': self.key_enter,
          'FIRST': self.key_first,
          'LAST': self.key_last,
          'LEFT': self.key_left,
          'RIGHT': self.key_right,
          'SHIFT': self.key_shift2,
          'SPACE': self.key_space_alt},
         {'BACKSPACE': self.key_backspace,
          'ENTER': self.key_enter,
          'FIRST': self.key_first,
          'LAST': self.key_last,
          'LEFT': self.key_left,
          'RIGHT': self.key_right,
          'SHIFT': self.key_shift3,
          'SPACE': self.key_space_alt}]
        self.shiftMsgs = [_('Lower case'),
         _('Upper case'),
         _('Special 1'),
         _('Special 2')]
        self.english = [[['`',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           '-',
           '=',
           'BACKSPACE'],
          ['FIRST',
           'q',
           'w',
           'e',
           'r',
           't',
           'y',
           'u',
           'i',
           'o',
           'p',
           '[',
           ']',
           '\\'],
          ['LAST',
           'a',
           's',
           'd',
           'f',
           'g',
           'h',
           'j',
           'k',
           'l',
           ';',
           "'",
           '',
           'ENTER'],
          ['SHIFT',
           'z',
           'x',
           'c',
           'v',
           'b',
           'n',
           'm',
           ',',
           '.',
           '/',
           '',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']], [['~',
           '!',
           '@',
           '#',
           '$',
           '%',
           '^',
           '&',
           '*',
           '(',
           ')',
           '_',
           '+',
           'BACKSPACE'],
          ['FIRST',
           'Q',
           'W',
           'E',
           'R',
           'T',
           'Y',
           'U',
           'I',
           'O',
           'P',
           '{',
           '}',
           '|'],
          ['LAST',
           'A',
           'S',
           'D',
           'F',
           'G',
           'H',
           'J',
           'K',
           'L',
           ':',
           '"',
           '',
           'ENTER'],
          ['SHIFT',
           'Z',
           'X',
           'C',
           'V',
           'B',
           'N',
           'M',
           '<',
           '>',
           '?',
           '',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']]]
        self.french = [[['\xb2',
           '&',
           '\xe9',
           '"',
           "'",
           '(',
           '-',
           '\xe8',
           '_',
           '\xe7',
           '\xe0',
           ')',
           '=',
           'BACKSPACE'],
          ['FIRST',
           'a',
           'z',
           'e',
           'r',
           't',
           'y',
           'u',
           'i',
           'o',
           'p',
           '$',
           '[',
           ']'],
          ['LAST',
           'q',
           's',
           'd',
           'f',
           'g',
           'h',
           'j',
           'k',
           'l',
           'm',
           '\xf9',
           '*',
           'ENTER'],
          ['SHIFT',
           '<',
           'w',
           'x',
           'c',
           'v',
           'b',
           'n',
           ',',
           ';',
           ':',
           '!',
           '\u20ac',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '#',
           '@',
           '`']], [['',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           '\xb0',
           '+',
           'BACKSPACE'],
          ['FIRST',
           'A',
           'Z',
           'E',
           'R',
           'T',
           'Y',
           'U',
           'I',
           'O',
           'P',
           '\xa3',
           '{',
           '}'],
          ['LAST',
           'Q',
           'S',
           'D',
           'F',
           'G',
           'H',
           'J',
           'K',
           'L',
           'M',
           '%',
           '\xb5',
           'ENTER'],
          ['SHIFT',
           '>',
           'W',
           'X',
           'C',
           'V',
           'B',
           'N',
           '?',
           '.',
           '/',
           '\xa7',
           '\xa6',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '~',
           '^',
           '\\']], [['',
           '',
           '\xe2',
           '\xea',
           '\xee',
           '\xf4',
           '\xfb',
           '\xe4',
           '\xeb',
           '\xef',
           '\xf6',
           '\xfc',
           '',
           'BACKSPACE'],
          ['FIRST',
           '',
           '\xe0',
           '\xe8',
           '\xec',
           '\xf2',
           '\xf9',
           '\xe1',
           '\xe9',
           '\xed',
           '\xf3',
           '\xfa',
           '',
           ''],
          ['LAST',
           '',
           '\xc2',
           '\xca',
           '\xce',
           '\xd4',
           '\xdb',
           '\xc4',
           '\xcb',
           '\xcf',
           '\xd6',
           '\xdc',
           '',
           'ENTER'],
          ['SHIFT',
           '',
           '\xc0',
           '\xc8',
           '\xcc',
           '\xd2',
           '\xd9',
           '\xc1',
           '\xc9',
           '\xcd',
           '\xd3',
           '\xda',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']]]
        self.german = [[['',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           '\xdf',
           "'",
           'BACKSPACE'],
          ['FIRST',
           'q',
           'w',
           'e',
           'r',
           't',
           'z',
           'u',
           'i',
           'o',
           'p',
           '\xfc',
           '[',
           ']'],
          ['LAST',
           'a',
           's',
           'd',
           'f',
           'g',
           'h',
           'j',
           'k',
           'l',
           '\xf6',
           '\xe4',
           '+',
           'ENTER'],
          ['SHIFT',
           '<',
           'y',
           'x',
           'c',
           'v',
           'b',
           'n',
           'm',
           ',',
           '.',
           '-',
           '#',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '|',
           '\\',
           '\xb5']], [['\xb0',
           '!',
           '"',
           '\xa7',
           '$',
           '%',
           '&',
           '/',
           '(',
           ')',
           '=',
           '?',
           '`',
           'BACKSPACE'],
          ['FIRST',
           'Q',
           'W',
           'E',
           'R',
           'T',
           'Z',
           'U',
           'I',
           'O',
           'P',
           '\xdc',
           '{',
           '}'],
          ['LAST',
           'A',
           'S',
           'D',
           'F',
           'G',
           'H',
           'J',
           'K',
           'L',
           '\xd6',
           '\xc4',
           '*',
           'ENTER'],
          ['SHIFT',
           '>',
           'Y',
           'X',
           'C',
           'V',
           'B',
           'N',
           'M',
           ';',
           ':',
           '_',
           '@',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '\u20ac',
           '\xb2',
           '\xb3']]]
        self.russian = [[['\u0451',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           '-',
           '=',
           'BACKSPACE'],
          ['FIRST',
           '\u0439',
           '\u0446',
           '\u0443',
           '\u043a',
           '\u0435',
           '\u043d',
           '\u0433',
           '\u0448',
           '\u0449',
           '\u0437',
           '\u0445',
           '\u044a',
           '\xa7'],
          ['LAST',
           '\u0444',
           '\u044b',
           '\u0432',
           '\u0430',
           '\u043f',
           '\u0440',
           '\u043e',
           '\u043b',
           '\u0434',
           '\u0436',
           '\u044d',
           '\\',
           'ENTER'],
          ['SHIFT',
           '\u044f',
           '\u0447',
           '\u0441',
           '\u043c',
           '\u0438',
           '\u0442',
           '\u044c',
           '\u0431',
           '\u044e',
           '.',
           '@',
           '&',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '<']], [['\u0401',
           '!',
           '"',
           '\u2116',
           ';',
           '%',
           ':',
           '?',
           '*',
           '(',
           ')',
           '_',
           '+',
           'BACKSPACE'],
          ['FIRST',
           '\u0419',
           '\u0426',
           '\u0423',
           '\u041a',
           '\u0415',
           '\u041d',
           '\u0413',
           '\u0428',
           '\u0429',
           '\u0417',
           '\u0425',
           '\u042a',
           '\u20bd'],
          ['LAST',
           '\u0424',
           '\u042b',
           '\u0412',
           '\u0410',
           '\u041f',
           '\u0420',
           '\u041e',
           '\u041b',
           '\u0414',
           '\u0416',
           '\u042d',
           '/',
           'ENTER'],
          ['SHIFT',
           '\u042f',
           '\u0427',
           '\u0421',
           '\u041c',
           '\u0418',
           '\u0422',
           '\u042c',
           '\u0411',
           '\u042e',
           ',',
           '#',
           '$',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '>']]]
        self.scandinavian = [[['\xa7',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           '+',
           '@',
           'BACKSPACE'],
          ['FIRST',
           'q',
           'w',
           'e',
           'r',
           't',
           'y',
           'u',
           'i',
           'o',
           'p',
           '\xe5',
           '[',
           ']'],
          ['LAST',
           'a',
           's',
           'd',
           'f',
           'g',
           'h',
           'j',
           'k',
           'l',
           '\xf6',
           '\xe4',
           "'",
           'ENTER'],
          ['SHIFT',
           '<',
           'z',
           'x',
           'c',
           'v',
           'b',
           'n',
           'm',
           ',',
           '.',
           '-',
           '\xab',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']], [['\xbd',
           '!',
           '"',
           '#',
           '\xa4',
           '%',
           '&',
           '/',
           '(',
           ')',
           '=',
           '?',
           '|',
           'BACKSPACE'],
          ['FIRST',
           'Q',
           'W',
           'E',
           'R',
           'T',
           'Y',
           'U',
           'I',
           'O',
           'P',
           '\xc5',
           '{',
           '}'],
          ['LAST',
           'A',
           'S',
           'D',
           'F',
           'G',
           'H',
           'J',
           'K',
           'L',
           '\xd6',
           '\xc4',
           '*',
           'ENTER'],
          ['SHIFT',
           '>',
           'Z',
           'X',
           'C',
           'V',
           'B',
           'N',
           'M',
           ';',
           ':',
           '_',
           '\xbb',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']], [['',
           '\xe2',
           '\xea',
           '\xee',
           '\xf4',
           '\xfb',
           '\xe4',
           '\xeb',
           '\xef',
           '\xf6',
           '\xfc',
           '\xe3',
           '\xf5',
           'BACKSPACE'],
          ['FIRST',
           '\xe0',
           '\xe8',
           '\xec',
           '\xf2',
           '\xf9',
           '\xe1',
           '\xe9',
           '\xed',
           '\xf3',
           '\xfa',
           '',
           '',
           ''],
          ['LAST',
           '\xc2',
           '\xca',
           '\xce',
           '\xd4',
           '\xdb',
           '\xc4',
           '\xcb',
           '\xcf',
           '\xd6',
           '\xdc',
           '\xc3',
           '\xd5',
           'ENTER'],
          ['SHIFT',
           '\xc0',
           '\xc8',
           '\xcc',
           '\xd2',
           '\xd9',
           '\xc1',
           '\xc9',
           '\xcd',
           '\xd3',
           '\xda',
           '',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']]]
        self.spanish = [[['\\',
           '1',
           '2',
           '3',
           '4',
           '5',
           '6',
           '7',
           '8',
           '9',
           '0',
           "'",
           '\xa1',
           'BACKSPACE'],
          ['FIRST',
           'q',
           'w',
           'e',
           'r',
           't',
           'y',
           'u',
           'i',
           'o',
           'p',
           '@',
           '+',
           '\xe7'],
          ['LAST',
           'a',
           's',
           'd',
           'f',
           'g',
           'h',
           'j',
           'k',
           'l',
           '\xf1',
           '[',
           ']',
           'ENTER'],
          ['SHIFT',
           '<',
           'z',
           'x',
           'c',
           'v',
           'b',
           'n',
           'm',
           ',',
           '.',
           '-',
           '\u20ac',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '',
           '\xe1',
           '\xe9',
           '\xed',
           '\xf3',
           '\xfa',
           '\xfc']], [['|',
           '!',
           '"',
           '\xb7',
           '$',
           '%',
           '&',
           '/',
           '(',
           ')',
           '=',
           '?',
           '\xbf',
           'BACKSPACE'],
          ['FIRST',
           'Q',
           'W',
           'E',
           'R',
           'T',
           'Y',
           'U',
           'I',
           'O',
           'P',
           '#',
           '*',
           '\xc7'],
          ['LAST',
           'A',
           'S',
           'D',
           'F',
           'G',
           'H',
           'J',
           'K',
           'L',
           '\xd1',
           '{',
           '}',
           'ENTER'],
          ['SHIFT',
           '>',
           'Z',
           'X',
           'C',
           'V',
           'B',
           'N',
           'M',
           ';',
           ':',
           '_',
           '\xac',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE',
           '',
           '\xc1',
           '\xc9',
           '\xcd',
           '\xd3',
           '\xda',
           '\xdc']]]
        self.locales = {'ar_BH': [_('Arabic'), _('Bahrain'), self.arabic(self.english)],
         'ar_EG': [_('Arabic'), _('Egypt'), self.arabic(self.english)],
         'ar_JO': [_('Arabic'), _('Jordan'), self.arabic(self.english)],
         'ar_KW': [_('Arabic'), _('Kuwait'), self.arabic(self.english)],
         'ar_LB': [_('Arabic'), _('Lebanon'), self.arabic(self.english)],
         'ar_OM': [_('Arabic'), _('Oman'), self.arabic(self.english)],
         'ar_QA': [_('Arabic'), _('Qatar'), self.arabic(self.english)],
         'ar_SA': [_('Arabic'), _('Saudi Arabia'), self.arabic(self.english)],
         'ar_SY': [_('Arabic'), _('Syrian Arab Republic'), self.arabic(self.english)],
         'ar_AE': [_('Arabic'), _('United Arab Emirates'), self.arabic(self.english)],
         'ar_YE': [_('Arabic'), _('Yemen'), self.arabic(self.english)],
         'cs_CZ': [_('Czech'), _('Czechia'), [[[';',
                      '+',
                      '\u011b',
                      '\u0161',
                      '\u010d',
                      '\u0159',
                      '\u017e',
                      '\xfd',
                      '\xe1',
                      '\xed',
                      '\xe9',
                      '=',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      'q',
                      'w',
                      'e',
                      'r',
                      't',
                      'z',
                      'u',
                      'i',
                      'o',
                      'p',
                      '\xfa',
                      ')',
                      ''],
                     ['LAST',
                      'a',
                      's',
                      'd',
                      'f',
                      'g',
                      'h',
                      'j',
                      'k',
                      'l',
                      '\u016f',
                      '\xa7',
                      '',
                      'ENTER'],
                     ['SHIFT',
                      'y',
                      'x',
                      'c',
                      'v',
                      'b',
                      'n',
                      'm',
                      ',',
                      '.',
                      '-',
                      '\u0148',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']], [['',
                      '1',
                      '2',
                      '3',
                      '4',
                      '5',
                      '6',
                      '7',
                      '8',
                      '9',
                      '0',
                      '%',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      'Q',
                      'W',
                      'E',
                      'R',
                      'T',
                      'Z',
                      'U',
                      'I',
                      'O',
                      'P',
                      '/',
                      '(',
                      ''],
                     ['LAST',
                      'A',
                      'S',
                      'D',
                      'F',
                      'G',
                      'H',
                      'J',
                      'K',
                      'L',
                      '"',
                      '!',
                      "'",
                      'ENTER'],
                     ['SHIFT',
                      'Y',
                      'X',
                      'C',
                      'V',
                      'B',
                      'N',
                      'M',
                      '?',
                      ':',
                      '_',
                      '\u0147',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']], [['',
                      '~',
                      '\u011a',
                      '\u0160',
                      '\u010c',
                      '\u0158',
                      '\u017d',
                      '\xdd',
                      '\xc1',
                      '\xcd',
                      '\xc9',
                      '`',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      '\\',
                      '|',
                      '\u20ac',
                      '\u0165',
                      '\u0164',
                      '',
                      '',
                      '',
                      '\xf3',
                      '\xd3',
                      '\xda',
                      '\xf7',
                      '\xd7'],
                     ['LAST',
                      '',
                      '\u0111',
                      '\xd0',
                      '[',
                      ']',
                      '\u010f',
                      '\u010e',
                      '\u0142',
                      '\u0141',
                      '\u016e',
                      '$',
                      '\xdf',
                      'ENTER'],
                     ['SHIFT',
                      '',
                      '#',
                      '&',
                      '@',
                      '{',
                      '}',
                      '',
                      '<',
                      '>',
                      '*',
                      '',
                      '\xa4',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']]]],
         'nl_NL': [_('Dutch'), _('Netherlands'), self.dutch(self.english)],
         'en_AU': [_('English'), _('Australian'), self.australian(self.english)],
         'en_GB': [_('English'), _('United Kingdom'), self.unitedKingdom(self.english)],
         'en_US': [_('English'), _('United States'), self.english],
         'en_EN': [_('English'), _('Various'), self.english],
         'et_EE': [_('Estonian'), _('Estonia'), self.estonian(self.scandinavian)],
         'fi_FI': [_('Finnish'), _('Finland'), self.finnish(self.scandinavian)],
         'fr_BE': [_('French'), _('Belgian'), self.belgian(self.french)],
         'fr_FR': [_('French'), _('France'), self.french],
         'de_DE': [_('German'), _('Germany'), self.german],
         'el_GR': [_('Greek (Modern)'), _('Greece'), [[['`',
                      '1',
                      '2',
                      '3',
                      '4',
                      '5',
                      '6',
                      '7',
                      '8',
                      '9',
                      '0',
                      '-',
                      '=',
                      'BACKSPACE'],
                     ['FIRST',
                      ';',
                      '\u03c2',
                      '\u03b5',
                      '\u03c1',
                      '\u03c4',
                      '\u03c5',
                      '\u03b8',
                      '\u03b9',
                      '\u03bf',
                      '\u03c0',
                      '[',
                      ']',
                      '/'],
                     ['LAST',
                      '\u03b1',
                      '\u03c3',
                      '\u03b4',
                      '\u03c6',
                      '\u03b3',
                      '\u03b7',
                      '\u03be',
                      '\u03ba',
                      '\u03bb',
                      '',
                      "'",
                      '\\',
                      'ENTER'],
                     ['SHIFT',
                      '<',
                      '\u03b6',
                      '\u03c7',
                      '\u03c8',
                      '\u03c9',
                      '\u03b2',
                      '\u03bd',
                      '\u03bc',
                      ',',
                      '.',
                      '\u03ca',
                      '\u03cb',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE',
                      '\u03ac',
                      '\u03ad',
                      '\u03ae',
                      '\u03af',
                      '\u03cc',
                      '\u03cd',
                      '\u03ce']], [['~',
                      '!',
                      '@',
                      '#',
                      '$',
                      '%',
                      '^',
                      '&',
                      '*',
                      '(',
                      ')',
                      '_',
                      '+',
                      'BACKSPACE'],
                     ['FIRST',
                      ':',
                      '',
                      '\u0395',
                      '\u03a1',
                      '\u03a4',
                      '\u03a5',
                      '\u0398',
                      '\u0399',
                      '\u039f',
                      '\u03a0',
                      '{',
                      '}',
                      '?'],
                     ['LAST',
                      '\u0391',
                      '\u03a3',
                      '\u0394',
                      '\u03a6',
                      '\u0393',
                      '\u0397',
                      '\u039e',
                      '\u039a',
                      '\u039b',
                      '',
                      '"',
                      '|',
                      'ENTER'],
                     ['SHIFT',
                      '>',
                      '\u0396',
                      '\u03a7',
                      '\u03a8',
                      '\u03a9',
                      '\u0392',
                      '\u039d',
                      '\u039c',
                      '<',
                      '>',
                      '\u03aa',
                      '\u03ab',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE',
                      '\u0386',
                      '\u0388',
                      '\u0389',
                      '\u038a',
                      '\u038c',
                      '\u038e',
                      '\u038f']], [['',
                      '',
                      '\xb2',
                      '\xb3',
                      '\xa3',
                      '\xa7',
                      '\xb6',
                      '\u20ac',
                      '\xa4',
                      '\xa6',
                      '\xb0',
                      '\xb1',
                      '\xbd',
                      'BACKSPACE'],
                     ['FIRST',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      ''],
                     ['LAST',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'ENTER'],
                     ['SHIFT',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']]]],
         'lv_LV': [_('Latvian'), _('Latvia'), self.latvian(self.english)],
         'lt_LT': [_('Lithuanian'), _('Lithuania'), self.lithuanian(self.english)],
         'nb_NO': [_('Norwegian'), _('Norway'), self.norwegian(self.scandinavian)],
         'fa_IR': [_('Persian'), _('Iran, Islamic Republic'), self.persian(self.english)],
         'pl_PL': [_('Polish'), _('Poland'), self.polish(self.english)],
         'ru_RU': [_('Russian'), _('Russian Federation'), self.russian],
         'sk_SK': [_('Slovak'), _('Slovakia'), [[['~',
                      '!',
                      '@',
                      '#',
                      '$',
                      '%',
                      '^',
                      '&',
                      '*',
                      '(',
                      ')',
                      '\xe1',
                      '\xe4',
                      'BACKSPACE'],
                     ['FIRST',
                      'q',
                      'w',
                      'e',
                      'r',
                      't',
                      'y',
                      'u',
                      'i',
                      'o',
                      'p',
                      '\u010d',
                      '\u010f',
                      '\xe9'],
                     ['LAST',
                      'a',
                      's',
                      'd',
                      'f',
                      'g',
                      'h',
                      'j',
                      'k',
                      'l',
                      '\xed',
                      '\u013a',
                      '\u013e',
                      'ENTER'],
                     ['SHIFT',
                      '<',
                      'z',
                      'x',
                      'c',
                      'v',
                      'b',
                      'n',
                      'm',
                      ',',
                      '.',
                      '\u0148',
                      '\xf3',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE',
                      '\xf4',
                      '\u0155',
                      '\u0161',
                      '\u0165',
                      '\xfa',
                      '\xfd',
                      '\u017e']], [['`',
                      '1',
                      '2',
                      '3',
                      '4',
                      '5',
                      '6',
                      '7',
                      '8',
                      '9',
                      '0',
                      '\xc1',
                      '\xc4',
                      'BACKSPACE'],
                     ['FIRST',
                      'Q',
                      'W',
                      'E',
                      'R',
                      'T',
                      'Y',
                      'U',
                      'I',
                      'O',
                      'P',
                      '\u010c',
                      '\u010e',
                      '\xc9'],
                     ['LAST',
                      'A',
                      'S',
                      'D',
                      'F',
                      'G',
                      'H',
                      'J',
                      'K',
                      'L',
                      '\xcd',
                      '\u0139',
                      '\u013d',
                      'ENTER'],
                     ['SHIFT',
                      '>',
                      'Z',
                      'X',
                      'C',
                      'V',
                      'B',
                      'N',
                      'M',
                      '?',
                      ':',
                      '\u0147',
                      '\xd3',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE',
                      '\xd4',
                      '\u0154',
                      '\u0160',
                      '\u0164',
                      '\xda',
                      '\xdd',
                      '\u017d']], [['',
                      '',
                      '\xa7',
                      '\xb0',
                      '\xa4',
                      '\u20ac',
                      '\xdf',
                      '\u0111',
                      '\u0110',
                      '\u0142',
                      '\u0141',
                      '',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      '',
                      '',
                      "'",
                      '"',
                      '+',
                      '-',
                      '\xd7',
                      '\xf7',
                      '=',
                      '_',
                      '~',
                      '',
                      ''],
                     ['LAST',
                      '',
                      '',
                      '/',
                      '\\',
                      ';',
                      '[',
                      ']',
                      '{',
                      '}',
                      '|',
                      '',
                      '',
                      'ENTER'],
                     ['SHIFT',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']]]],
         'es_ES': [_('Spanish'), _('Spain'), self.spanish],
         'sv_SE': [_('Swedish'), _('Sweden'), self.swedish(self.scandinavian)],
         'th_TH': [_('Thai'), _('Thailand'), [[['',
                      '',
                      '\u0e45',
                      '\u0e20',
                      '\u0e16',
                      '\u0e38',
                      '\u0e36',
                      '\u0e04',
                      '\u0e15',
                      '\u0e08',
                      '\u0e02',
                      '\u0e0a',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      '\u0e46',
                      '\u0e44',
                      '\u0e33',
                      '\u0e1e',
                      '\u0e30',
                      '\u0e31',
                      '\u0e35',
                      '\u0e23',
                      '\u0e19',
                      '\u0e22',
                      '\u0e1a',
                      '\u0e25',
                      ''],
                     ['LAST',
                      '\u0e1f',
                      '\u0e2b',
                      '\u0e01',
                      '\u0e14',
                      '\u0e40',
                      '\u0e49',
                      '\u0e48',
                      '\u0e32',
                      '\u0e2a',
                      '\u0e27',
                      '\u0e07',
                      '\u0e03',
                      'OK'],
                     ['SHIFT',
                      '\u0e1c',
                      '\u0e1b',
                      '\u0e41',
                      '\u0e2d',
                      '\u0e34',
                      '\u0e37',
                      '\u0e17',
                      '\u0e21',
                      '\u0e43',
                      '\u0e1d',
                      '',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']], [['',
                      '',
                      '\u0e51',
                      '\u0e52',
                      '\u0e53',
                      '\u0e54',
                      '\u0e39',
                      '\u0e55',
                      '\u0e56',
                      '\u0e57',
                      '\u0e58',
                      '\u0e59',
                      '',
                      'BACKSPACE'],
                     ['FIRST',
                      '\u0e50',
                      '',
                      '\u0e0e',
                      '\u0e11',
                      '\u0e18',
                      '\u0e4d',
                      '\u0e4a',
                      '\u0e13',
                      '\u0e2f',
                      '\u0e0d',
                      '\u0e10',
                      '\u0e05',
                      ''],
                     ['LAST',
                      '\u0e24',
                      '\u0e06',
                      '\u0e0f',
                      '\u0e42',
                      '\u0e0c',
                      '\u0e47',
                      '\u0e4b',
                      '\u0e29',
                      '\u0e28',
                      '\u0e0b',
                      '',
                      '\u0e3f',
                      'OK'],
                     ['SHIFT',
                      '',
                      '',
                      '\u0e09',
                      '\u0e2e',
                      '\u0e3a',
                      '\u0e4c',
                      '',
                      '\u0e12',
                      '\u0e2c',
                      '\u0e26',
                      '',
                      '',
                      'SHIFT'],
                     ['EXIT',
                      'LOC',
                      'LEFT',
                      'RIGHT',
                      'ALL',
                      'CLR',
                      'SPACE']]]],
         'uk_UA': [_('Ukrainian'), _('Ukraine'), self.ukranian(self.russian)]}
        self.oldaction()
        self.lang = language.getLanguage()
        self['prompt'] = Label(prompt)
        self['text'] = Input(text=self.text, maxSize=self.maxSize, visible_width=self.visible_width, type=self.type, currPos=len(self.text), allMarked=self.allMarked)
        self['list'] = VirtualKeyBoardList([])
        self['mode'] = Label(_('INS'))
        self['locale'] = Label(_('Locale') + ': ' + self.lang)
        self['language'] = Label(_('Language') + ': ' + self.lang)
        self['key_info'] = StaticText(_('INFO'))
        self['key_red'] = StaticText(_('Exit'))
        self['key_green'] = StaticText(_('Save'))
        self['key_yellow'] = StaticText(_('Select locale'))
        self['key_blue'] = StaticText(self.shiftMsgs[1])
        self['key_help'] = StaticText(_('HELP'))
        width, self.height = skin.parameters.get('VirtualKeyBoard', (45, 45))
        self.width = self.key_bg and self.key_bg.size().width() or width
        self.shiftColors = skin.parameters.get('VirtualKeyBoardShiftColors', (16777215, 16777215, 65535, 16711935))
        self.language = None
        self.location = None
        self.keyList = []
        self.shiftLevels = 0
        self.shiftLevel = 0
        self.keyboardWidth = 0
        self.keyboardHeight = 0
        self.maxKey = 0
        self.overwrite = False
        self.selectedKey = None
        self.sms = NumericalTextInput(self.smsGotChar)
        self.smsChar = None
        self.setLocale()
        self.onExecBegin.append(self.setKeyboardModeAscii)
        self.onLayoutFinish.append(self.buildVirtualKeyBoard)

    def arabic(self, base):
        keyList = copy.deepcopy(base)
        keyList[1][0][8] = '\u066d'
        keyList.extend([[['\u0630',
           '\u0661',
           '\u0662',
           '\u0663',
           '\u0664',
           '\u0665',
           '\u0666',
           '\u0667',
           '\u0668',
           '\u0669',
           '\u0660',
           '-',
           '=',
           'BACKSPACE'],
          ['FIRST',
           '\u0636',
           '\u0635',
           '\u062b',
           '\u0642',
           '\u0641',
           '\u063a',
           '\u0639',
           '\u0647',
           '\u062e',
           '\u062d',
           '\u062c',
           '\u062f',
           '\\'],
          ['LAST',
           '\u0634',
           '\u0633',
           '\u064a',
           '\u0628',
           '\u0644',
           '\u0627',
           '\u062a',
           '\u0646',
           '\u0645',
           '\u0643',
           '\u0637',
           '',
           'ENTER'],
          ['SHIFT',
           '\u0626',
           '\u0621',
           '\u0624',
           '\u0631',
           '\ufefb',
           '\u0649',
           '\u0629',
           '\u0648',
           '\u0632',
           '\u0638',
           '',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']], [['\u0651',
           '!',
           '@',
           '#',
           '$',
           '%',
           '^',
           '&',
           '\u066d',
           '(',
           ')',
           '_',
           '+',
           'BACKSPACE'],
          ['FIRST',
           '\u0636',
           '\u0635',
           '\u062b',
           '\u0642',
           '\u0641',
           '\u063a',
           '\u0639',
           '\xf7',
           '\xd7',
           '\u061b',
           '>',
           '<',
           '|'],
          ['LAST',
           '\u0634',
           '\u0633',
           '\u064a',
           '\u0628',
           '\u0644',
           '\u0623',
           '\u0640',
           '\u060c',
           '/',
           ':',
           '"',
           '',
           'ENTER'],
          ['SHIFT',
           '\u0626',
           '\u0621',
           '\u0624',
           '\u0631',
           '\ufef5',
           '\u0622',
           '\u0629',
           ',',
           '.',
           '\u061f',
           '',
           '',
           'SHIFT'],
          ['EXIT',
           'LOC',
           'LEFT',
           'RIGHT',
           'ALL',
           'CLR',
           'SPACE']]])
        return keyList

    def australian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][-1].extend(['www.',
         '.com',
         '.net',
         '.org',
         '.edu',
         '.au',
         '.tv'])
        keyList[1][-1].extend(['www.',
         '.com',
         '.net',
         '.org',
         '.edu',
         '.au',
         '.tv'])
        return keyList

    def belgian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][0][6] = '\xa7'
        keyList[0][0][8] = '!'
        keyList[0][0][12] = '-'
        keyList[0][2][12] = '\xb5'
        keyList[0][3][11] = '='
        keyList[1][0][0] = '\xb3'
        keyList[1][0][12] = '_'
        keyList[1][1][11] = '*'
        keyList[1][2][12] = '\xa3'
        keyList[1][3][11] = '+'
        return keyList

    def dutch(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][0][0] = '@'
        keyList[0][0][11] = '/'
        keyList[0][0][12] = '\xba'
        keyList[0][1][11] = '\xa8'
        keyList[0][1][12] = '*'
        keyList[0][1][13] = '<'
        keyList[0][2][10] = '+'
        keyList[0][2][11] = '\xb4'
        keyList[0][2][12] = '\\'
        keyList[0][3] = ['SHIFT',
         ']',
         'z',
         'x',
         'c',
         'v',
         'b',
         'n',
         'm',
         ',',
         '.',
         '-',
         '{',
         'SHIFT']
        keyList[1][0] = ['\xa7',
         '!',
         '"',
         '#',
         '$',
         '%',
         '&',
         '_',
         '(',
         ')',
         "'",
         '?',
         '~',
         'BACKSPACE']
        keyList[1][1][11] = '^'
        keyList[1][1][12] = '|'
        keyList[1][1][13] = '>'
        keyList[1][2][10] = '\xb1'
        keyList[1][2][11] = '`'
        keyList[1][2][12] = '\xa6'
        keyList[1][3] = ['SHIFT',
         '[',
         'Z',
         'X',
         'C',
         'V',
         'B',
         'N',
         'M',
         ';',
         ':',
         '=',
         '}',
         'SHIFT']
        keyList.append([['\xac',
          '\xb9',
          '\xb2',
          '\xb3',
          '\xbc',
          '\xbd',
          '\xbe',
          '\xa3',
          '{',
          '}',
          '$',
          '\\',
          '',
          'BACKSPACE'],
         ['FIRST',
          '',
          '',
          '\u20ac',
          '\xb6',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          ''],
         ['LAST',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          'ENTER'],
         ['SHIFT',
          '\xa6',
          '\xab',
          '\xbb',
          '\xa2',
          '',
          '',
          '',
          '\xb5',
          '',
          '\xb7',
          '',
          '',
          'SHIFT'],
         ['EXIT',
          'LOC',
          'LEFT',
          'RIGHT',
          'ALL',
          'CLR',
          'SPACE']])
        return keyList

    def oldaction(self):
        self['actions'] = NumberActionMap(['OkCancelActions',
         'WizardActions',
         'ColorActions',
         'KeyboardInputActions',
         'InputBoxActions',
         'InputAsciiActions',
         'VirtualKeyBoardActions',
         'HelpableNumberActionMap'], {'gotAsciiCode': self.keyGotAscii,
         'ok': self.okClicked,
         'cancel': self.cancel,
         'left': self.left,
         'right': self.right,
         'up': self.up,
         'down': self.down,
         'red': self.cancel,
         'green': self.save,
         'yellow': self.localeMenu,
         'blue': self.shiftClicked,
         'deleteBackward': self.backClicked,
         'deleteForward': self.forwardClicked,
         'back': self.close,
         'pageUp': self.cursorRight,
         'pageDown': self.cursorLeft,
         '1': self.keyNumberGlobal,
         '2': self.keyNumberGlobal,
         '3': self.keyNumberGlobal,
         '4': self.keyNumberGlobal,
         '5': self.keyNumberGlobal,
         '6': self.keyNumberGlobal,
         '7': self.keyNumberGlobal,
         '8': self.keyNumberGlobal,
         '9': self.keyNumberGlobal,
         '0': self.keyNumberGlobal}, -2)

    def estonian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][1][11] = '\xfc'
        keyList[0][1][12] = '\xf5'
        keyList[0][1][13] = '\u0161'
        keyList[0][3][12] = '\u017e'
        keyList[0][4].extend(['[', ']', '\\'])
        keyList[1][1][11] = '\xdc'
        keyList[1][1][12] = '\xd5'
        keyList[1][1][13] = '\u0160'
        keyList[1][3][12] = '\u017d'
        keyList[1][4].extend(['{',
         '}',
         '\xa3',
         '$',
         '\u20ac'])
        del keyList[2]
        return keyList

    def finnish(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][4].append('\\')
        keyList[1][4].extend(['\xa3', '$', '\u20ac'])
        return keyList

    def latvian(self, base):
        keyList = copy.deepcopy(base)
        keyList.append([['',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          '',
          'BACKSPACE'],
         ['FIRST',
          '',
          '\u0113',
          '\u0112',
          '\u0157',
          '\u0156',
          '\u016b',
          '\u016a',
          '\u012b',
          '\u012a',
          '\u014d',
          '\u014c',
          '',
          ''],
         ['LAST',
          '\u0101',
          '\u0100',
          '\u0161',
          '\u0160',
          '\u0123',
          '\u0122',
          '\u0137',
          '\u0136',
          '\u013c',
          '\u013b',
          '',
          '',
          'ENTER'],
         ['SHIFT',
          '\u017e',
          '\u017d',
          '\u010d',
          '\u010c',
          '',
          '\u0146',
          '\u0145',
          '',
          '',
          '',
          '',
          '',
          'SHIFT'],
         ['EXIT',
          'LOC',
          'LEFT',
          'RIGHT',
          'ALL',
          'CLR',
          'SPACE']])
        return keyList

    def lithuanian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][0] = ['`',
         '\u0105',
         '\u010d',
         '\u0119',
         '\u0117',
         '\u012f',
         '\u0161',
         '\u0173',
         '\u016b',
         '',
         '',
         '',
         '\u017e',
         'BACKSPACE']
        keyList[0][1][13] = ''
        keyList[0][2][12] = '\\'
        keyList[1][0] = ['~',
         '\u0104',
         '\u010c',
         '\u0118',
         '\u0116',
         '\u012e',
         '\u0160',
         '\u0172',
         '\u016a',
         '\u201e',
         '\u201c',
         '',
         '\u017d',
         'BACKSPACE']
        keyList[1][1][13] = ''
        keyList[1][2][12] = '|'
        keyList.append([['\u02dc',
          '\xbc',
          '\xbd',
          '\xbe',
          '\xa4',
          '\xa2',
          '\xb0',
          '\xa7',
          '\xd7',
          '\xab',
          '\xbb',
          '\xf7',
          '\xb1',
          'BACKSPACE'],
         ['FIRST',
          '1',
          '2',
          '3',
          '4',
          '5',
          '6',
          '7',
          '8',
          '9',
          '0',
          '-',
          '=',
          '\xad'],
         ['LAST',
          '!',
          '@',
          '#',
          '$',
          '%',
          '^',
          '&',
          '*',
          '(',
          ')',
          '_',
          '+',
          'ENTER'],
         ['SHIFT',
          '',
          '\xdf',
          '\xa9',
          '\xae',
          '\u2122',
          '\xac',
          '\xa3',
          '\u20ac',
          '\xb7',
          '\xb9',
          '\xb2',
          '\xb3',
          'SHIFT'],
         ['EXIT',
          'LOC',
          'LEFT',
          'RIGHT',
          'ALL',
          'CLR',
          'SPACE']])
        return keyList

    def norwegian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][0][0] = '|'
        keyList[0][0][12] = '\\'
        keyList[0][2][10] = '\xf8'
        keyList[0][2][11] = '\xe6'
        keyList[0][3][12] = '\xb5'
        keyList[1][0][0] = '\xa7'
        keyList[1][0][12] = '@'
        keyList[1][2][10] = '\xd8'
        keyList[1][2][11] = '\xc6'
        keyList[1][3][12] = ''
        keyList[1][4].extend(['\xa3', '$', '\u20ac'])
        return keyList

    def persian(self, base):
        keyList = copy.deepcopy(base)
        keyList.append([['\xf7',
          '\u06f1',
          '\u06f2',
          '\u06f3',
          '\u06f4',
          '\u06f5',
          '\u06f6',
          '\u06f7',
          '\u06f8',
          '\u06f9',
          '\u06f0',
          '-',
          '=',
          'BACKSPACE'],
         ['FIRST',
          '\u0636',
          '\u0635',
          '\u062b',
          '\u0642',
          '\u0641',
          '\u063a',
          '\u0639',
          '\u0647',
          '\u062e',
          '\u062d',
          '\u062c',
          '\u0686',
          '\u067e'],
         ['LAST',
          '\u0634',
          '\u0633',
          '\u0649',
          '\u0628',
          '\u0644',
          '\u0622',
          '\u0627',
          '\u062a',
          '\u0646',
          '\u0645',
          '\u06a9',
          '\u06af',
          'ENTER'],
         ['SHIFT',
          '\u0638',
          '\u0637',
          '\u0698',
          '\u0632',
          '\u0631',
          '\u0630',
          '\u062f',
          '\u0626',
          '\u0621',
          '\u0648',
          '\u060c',
          '\u061f',
          'SHIFT'],
         ['EXIT',
          'LOC',
          'LEFT',
          'RIGHT',
          'ALL',
          'CLR',
          'SPACE']])
        return keyList

    def polish(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][3][11] = '\u0105'
        keyList[0][3][12] = '\u0107'
        keyList[0][-1].extend(['\u0119',
         '\u0142',
         '\u0144',
         '\xf3',
         '\u015b',
         '\u017a',
         '\u017c'])
        keyList[1][2][12] = '\u20ac'
        keyList[1][3][11] = '\u0104'
        keyList[1][3][12] = '\u0106'
        keyList[1][-1].extend(['\u0118',
         '\u0141',
         '\u0143',
         '\xd3',
         '\u015a',
         '\u0179',
         '\u017b'])
        return keyList

    def swedish(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][4].extend(['\\', '\xb5'])
        keyList[1][4].extend(['\xa3', '$', '\u20ac'])
        return keyList

    def ukranian(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][1][12] = '\u0457'
        keyList[0][2][2] = '\u0456'
        keyList[0][2][11] = '\u0454'
        keyList[0][3][11] = '\u0491'
        keyList[0][4].append('@')
        keyList[1][1][12] = '\u0407'
        keyList[1][2][2] = '\u0406'
        keyList[1][2][11] = '\u0404'
        keyList[1][3][11] = '\u0490'
        keyList[1][4].append('#')
        return keyList

    def unitedKingdom(self, base):
        keyList = copy.deepcopy(base)
        keyList[0][1][13] = '\xa6'
        keyList[0][2][12] = '#'
        keyList[0][3] = ['SHIFT',
         '\\',
         'z',
         'x',
         'c',
         'v',
         'b',
         'n',
         'm',
         ',',
         '.',
         '/',
         '',
         'SHIFT']
        keyList[0][-1].extend(['\xe1',
         '\xe9',
         '\xed',
         '\xf3',
         '\xfa'])
        keyList[1][0][0] = '\xac'
        keyList[1][0][2] = '"'
        keyList[1][0][3] = '\xa3'
        keyList[1][1][13] = '\u20ac'
        keyList[1][2][11] = '@'
        keyList[1][2][12] = '~'
        keyList[1][3] = ['SHIFT',
         '|',
         'Z',
         'X',
         'C',
         'V',
         'B',
         'N',
         'M',
         '<',
         '>',
         '?',
         '',
         'SHIFT']
        keyList[1][-1].extend(['\xc1',
         '\xc9',
         '\xcd',
         '\xd3',
         '\xda'])
        return keyList

    def smsGotChar(self):
        if self.smsChar and self.selectAsciiKey(self.smsChar):
            self.okClicked()

    def setLocale(self):
        self.language, self.location, self.keyList = self.locales.get(self.lang, [None, None, None])
        if self.language is None or self.location is None or self.keyList is None:
            self.lang = 'en_EN'
            self.language = _('English')
            self.location = _('Various')
            self.keyList = self.english
        self.shiftLevel = 0
        self['locale'].setText(_('Locale') + ': ' + self.lang + '  (' + self.language + ' - ' + self.location + ')')

    def buildVirtualKeyBoard(self):
        self.shiftLevels = len(self.keyList)
        if self.shiftLevel >= self.shiftLevels:
            self.shiftLevel = 0
        self.keyboardWidth = len(self.keyList[self.shiftLevel][0])
        self.keyboardHeight = len(self.keyList[self.shiftLevel])
        self.maxKey = self.keyboardWidth * (self.keyboardHeight - 1) + len(self.keyList[self.shiftLevel][-1]) - 1
        self.list = []
        for keys in self.keyList[self.shiftLevel]:
            self.list.append(self.virtualKeyBoardEntryComponent(keys))

        self.previousSelectedKey = None
        if self.selectedKey is None:
            self.selectedKey = self.keyboardWidth
        self.markSelectedKey()

    def virtualKeyBoardEntryComponent(self, keys):
        res = [keys]
        text = []
        offset = 14 - self.keyboardWidth
        x = self.width * offset / 2
        if offset % 2:
            x += self.width / 2
        for key in keys:
            image = self.keyImages[self.shiftLevel].get(key, None)
            if image:
                width = image.size().width()
                res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(width, self.height), png=image))
            else:
                width = self.width
                res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(width, self.height), png=self.keyBackgrounds.get(key, self.key_bg)))
                if len(key) > 1:
                    text.append(MultiContentEntryText(pos=(x, 0), size=(width, self.height), font=1, flags=RT_HALIGN_CENTER | RT_VALIGN_CENTER, text=_(key.encode('utf-8')), color=self.shiftColors[self.shiftLevel]))
                else:
                    text.append(MultiContentEntryText(pos=(x, 0), size=(width, self.height), font=0, flags=RT_HALIGN_CENTER | RT_VALIGN_CENTER, text=key.encode('utf-8'), color=self.shiftColors[self.shiftLevel]))
            x += width

        return res + text

    def markSelectedKey(self):
        if self.previousSelectedKey is not None:
            self.list[self.previousSelectedKey / self.keyboardWidth] = self.list[self.previousSelectedKey / self.keyboardWidth][:-1]
        if self.selectedKey > self.maxKey:
            self.selectedKey = self.maxKey
        x = self.list[self.selectedKey / self.keyboardWidth][self.selectedKey % self.keyboardWidth + 1][1]
        if self.key_sel is None:
            width = self.width
        else:
            width = self.key_sel.size().width()
        self.list[self.selectedKey / self.keyboardWidth].append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(width, self.height), png=self.key_sel))
        self.previousSelectedKey = self.selectedKey
        self['list'].setList(self.list)

    def okClicked(self):
        self.smsChar = None
        text = self.keyList[self.shiftLevel][self.selectedKey / self.keyboardWidth][self.selectedKey % self.keyboardWidth].encode('UTF-8')
        if text == '':
            pass
        elif text == 'ALL':
            self['text'].markAll()
        elif text == 'BACK':
            self['text'].deleteBackward()
        elif text == 'BACKSPACE':
            self['text'].deleteBackward()
        elif text == 'BLANK':
            pass
        elif text == 'CLR':
            self['text'].deleteAllChars()
            self['text'].update()
        elif text == 'ENTER':
            self.save()
        elif text == 'ESC':
            self.cancel()
        elif text == 'EXIT':
            self.cancel()
        elif text == 'FIRST':
            self['text'].home()
        elif text == 'LOC':
            self.localeMenu()
        elif text == 'LAST':
            self['text'].end()
        elif text == 'LEFT':
            self['text'].left()
        elif text == 'OK':
            self.save()
        elif text == 'RIGHT':
            self['text'].right()
        elif text == 'SAVE':
            self.save()
        elif text == 'SHIFT':
            self.shiftClicked()
        elif text == 'Shift':
            self.shiftClicked()
        elif text == 'SPACE':
            self['text'].char(' '.encode('UTF-8'))
        else:
            self['text'].char(text.encode('UTF-8'))

    def cancel(self):
        self.close(None)

    def save(self):
        self.close(self['text'].getText())

    def localeMenu(self):
        languages = []
        for locale, data in self.locales.items():
            languages.append((data[0] + '  -  ' + data[1] + '  (' + locale + ')', locale))

        languages = sorted(languages)
        index = 0
        default = 0
        for item in languages:
            if item[1] == self.lang:
                default = index
                break
            index += 1

        self.session.openWithCallback(self.localeMenuCallback, ChoiceBox, _('Available locales are:'), list=languages, selection=default, keys=[])

    def localeMenuCallback(self, choice):
        if choice:
            self.lang = choice[1]
            self.setLocale()
            self.buildVirtualKeyBoard()

    def shiftClicked(self):
        self.smsChar = None
        self.shiftLevel = (self.shiftLevel + 1) % self.shiftLevels
        nextLevel = (self.shiftLevel + 1) % self.shiftLevels
        self['key_blue'].setText(self.shiftMsgs[nextLevel])
        self.buildVirtualKeyBoard()

    def keyToggleOW(self):
        self['text'].toggleOverwrite()
        self.overwrite = not self.overwrite
        if self.overwrite:
            self['mode'].setText(_('OVR'))
        else:
            self['mode'].setText(_('INS'))

    def backClicked(self):
        self['text'].deleteBackward()

    def forwardClicked(self):
        self['text'].deleteForward()

    def cursorFirst(self):
        self['text'].home()

    def cursorLast(self):
        self['text'].end()

    def up(self):
        self.smsChar = None
        self.selectedKey -= self.keyboardWidth
        if self.selectedKey < 0:
            self.selectedKey = self.maxKey / self.keyboardWidth * self.keyboardWidth + self.selectedKey % self.keyboardWidth
            if self.selectedKey > self.maxKey:
                self.selectedKey -= self.keyboardWidth
        self.markSelectedKey()

    def left(self):
        self.smsChar = None
        self.selectedKey = self.selectedKey / self.keyboardWidth * self.keyboardWidth + (self.selectedKey + self.keyboardWidth - 1) % self.keyboardWidth
        if self.selectedKey > self.maxKey:
            self.selectedKey = self.maxKey
        self.markSelectedKey()

    def right(self):
        self.smsChar = None
        self.selectedKey = self.selectedKey / self.keyboardWidth * self.keyboardWidth + (self.selectedKey + 1) % self.keyboardWidth
        if self.selectedKey > self.maxKey:
            self.selectedKey = self.selectedKey / self.keyboardWidth * self.keyboardWidth
        self.markSelectedKey()

    def down(self):
        self.smsChar = None
        self.selectedKey += self.keyboardWidth
        if self.selectedKey > self.maxKey:
            self.selectedKey %= self.keyboardWidth
        self.markSelectedKey()

    def keyNumberGlobal(self, number):
        self.smsChar = self.sms.getKey(number)
        self.selectAsciiKey(self.smsChar)

    def keyGotAscii(self):
        self.smsChar = None
        if self.selectAsciiKey(str(chr(getPrevAsciiCode()).encode('utf-8'))):
            self.okClicked()

    def selectAsciiKey(self, char):
        if char == ' ':
            char = 'SPACE'
        self.shiftLevel = -1
        for keyList in self.keyList:
            self.shiftLevel = (self.shiftLevel + 1) % self.shiftLevels
            self.buildVirtualKeyBoard()
            selkey = 0
            for keys in keyList:
                for key in keys:
                    if key == char:
                        self.selectedKey = selkey
                        self.markSelectedKey()
                        return True
                    selkey += 1
